{
    "projects": [
        {
            "id": "openstack/cinder",
            "name": "Cinder (Block Storage)"
        },
        {
            "id": "openstack/glance",
            "name": "Glance (Image Service)"
        },
        {
            "id": "openstack/ironic",
            "name": "Ironic (Bare Metal Provisioning)"
        },
        {
            "id": "openstack/neutron",
            "name": "Neutron (Networking)"
        },
        {
            "id": "openstack/nova",
            "name": "Nova (Compute)"
        },
        {
            "id": "openstack/sahara",
            "name": "Sahara (Data Processing)"
        }
    ],
    "releases": [
        {
            "id": "Austin",
            "wiki": "https://wiki.openstack.org/wiki/ReleaseNotes/Austin"
        },
        {
            "id": "Bexar",
            "wiki": "https://wiki.openstack.org/wiki/ReleaseNotes/Bexar"
        },
        {
            "id": "Cactus",
            "wiki": "https://wiki.openstack.org/wiki/ReleaseNotes/Cactus"
        },
        {
            "id": "Diablo",
            "wiki": "https://wiki.openstack.org/wiki/ReleaseNotes/Diablo"
        },
        {
            "id": "Essex",
            "wiki": "https://wiki.openstack.org/wiki/ReleaseNotes/Essex"
        },
        {
            "id": "Folsom",
            "wiki": "https://wiki.openstack.org/wiki/ReleaseNotes/Folsom"
        },
        {
            "id": "Grizzly",
            "wiki": "https://wiki.openstack.org/wiki/ReleaseNotes/Grizzly"
        },
        {
            "id": "Havana",
            "wiki": "https://wiki.openstack.org/wiki/ReleaseNotes/Havana"
        },
        {
            "id": "Icehouse",
            "wiki": "https://wiki.openstack.org/wiki/ReleaseNotes/Icehouse"
        },
        {
            "id": "Juno",
            "wiki": "https://wiki.openstack.org/wiki/Releases"
        },
        {
            "id": "Kilo",
            "wiki": "https://wiki.openstack.org/wiki/Releases"
        }
    ],
    "drivers": [
        {
            "project_id": "openstack/cinder",
            "vendor": "Ceph",
            "name": "Ceph RADOS Block Device (RBD)",
            "description": "The Ceph RADOS Block Device driver  allows to use Ceph RADOS block devices (RBD) for volumes.",
            "maintainers": [
                {
                    "name": "Josh Durgin",
                    "email": "josh.durgin@inktank.com",
                    "launchpad_id": "jdurgin"
                },
                {
                    "name": "Mike Perez",
                    "email": "thingee@gmail.com",
                    "launchpad_id": "thingee"
                },
                {
                    "name": "Edward Hope-Morley",
                    "email": "edward.hope-morley@canonical.com",
                    "launchpad_id": "hopem"
                }
            ],
            "wiki": "http://docs.openstack.org/trunk/config-reference/content/ceph-rados.html",
            "releases": ["Cactus", "Diablo", "Essex", "Folsom", "Grizzly", "Havana", "Icehouse", "Juno"]
        },
        {
            "project_id": "openstack/cinder",
            "vendor": "Citrix",
            "name": "XenAPI Storage Manager volume driver",
            "maintainers": [
                {
                    "name": "Mate Lakat",
                    "email": "mate.lakat@citrix.com",
                    "launchpad_id": "mate-lakat"
                }
            ],
            "description": "The Xen Storage Manager volume driver (xensm) is a XenAPI hypervisor specific volume driver, and can be used to provide basic storage functionality, including volume creation and destruction, on a number of different storage back-ends.",
            "wiki": "http://docs.openstack.org/trunk/config-reference/content/xensm.html",
            "releases": ["Juno"]
        },
        {
            "project_id": "openstack/cinder",
            "vendor": "Citrix",
            "name": "XenAPINFS",
            "description": "XenAPINFS is a Block Storage (Cinder) driver that uses an NFS share through the XenAPI Storage Manager to store virtual disk images and expose those virtual disks as volumes. This driver does not access the NFS share directly. It accesses the share only through XenAPI Storage Manager. Consider this driver as a reference implementation for use of the XenAPI Storage Manager in OpenStack (present in XenServer and XCP).",
            "maintainers": [
                {
                    "name": "Mate Lakat",
                    "email": "mate.lakat@citrix.com",
                    "launchpad_id": "mate-lakat"
                }
            ],
            "wiki": "http://docs.openstack.org/trunk/config-reference/content/xenapinfs.html",
            "releases": ["Grizzly"]
        },
        {
            "project_id": "openstack/cinder",
            "vendor": "Cloudbase",
            "name": "Windows Server driver",
            "description": "There is a volume back-end driver for Windows Server 2012 / 2012 R2.",
            "maintainers": [
                {
                    "name": "Alessandro Pilotti",
                    "email": "apilotti@cloudbasesolutions.com",
                    "launchpad_id": "alexpilotti"
                },
                {
                    "name": "Octavian Ciuhandu",
                    "email": "ociuhandu@cloudbasesolutions.com",
                    "launchpad_id": "ociuhandu"
                }
            ],
            "wiki": "http://docs.openstack.org/trunk/config-reference/content/windows-volume-driver.html",
            "releases": ["Grizzly", "Havana", "Icehouse", "Juno"]
        },
        {
            "project_id": "openstack/cinder",
            "vendor": "Cloudfounders",
            "name": "CloudFounders Open vStorage driver",
            "description": "The driver allows to configure the OpenStack Block Storage service for use with CloudFounders Open vStorage appliance. Open vStorage is an open-source software defined storage VM storagerouter, a layer in between Virtual machines and storage backends. It is compatible with Swift (via S3) interface as backend and nova compute nodes as frontend, it serves volumes via a virtual filesystem using .raw files. Multiple Storage Routers can coordinate between them and allow live migration with near-zero copy (only local cache is synced).",
            "maintainers": [
                {
                    "name": "Eduard Biceri Matei",
                    "email": "eduard.matei@cloudfounders.com",
                    "launchpad_id": "cubusbacau"
                }
            ],
            "wiki": "http://doc.openvstorage.com/doc_openvstorage/Installation",
            "releases": ["Kilo"],
            "ci": {
                  "id":"cloudfoundersci",
                  "success_pattern": "Build Successful",
                  "failure_pattern": "Build Failed"
            }
        },
        {
            "project_id": "openstack/cinder",
            "vendor": "Coraid",
            "name": "Coraid AoE driver",
            "description": "The driver allows to configure the OpenStack Block Storage service for use with Coraid storage appliances. Coraid storage appliances use the low-latency ATA-over-Ethernet (ATA) protocol to provide high-bandwidth data transfer between hosts and data on the network.",
            "maintainers": [
                {
                    "name": "Yacine Kheddache",
                    "email": "yacine@alyseo.com",
                    "launchpad_id": "yacine-b"
                }
            ],
            "wiki": "http://docs.openstack.org/trunk/config-reference/content/coraid_aoe_driver_configuration.html",
            "releases": ["Grizzly", "Havana", "Icehouse", "Juno"],
            "ci": {
                  "id":"coraid-ci",
                  "success_pattern": "Build Successful",
                  "failure_pattern": "Build Failed"
            }
        },
        {
            "project_id": "openstack/cinder",
            "vendor": "Datera",
            "name": "Datera Volume driver",
            "description": "Datera Volume driver can allow OpenStack services communicate with Datera storage for both vHost and ISCSI.",
            "maintainers": [
                {
                    "name": "Mike Perez",
                    "email": "thingee@gmail.com",
                    "launchpad_id": "thingee"
                }
            ],
            "wiki": "http://docs.openstack.org/developer/cinder/api/cinder.volume.drivers.datera.html?highlight=datera#module-cinder.volume.drivers.datera",
            "releases": ["Icehouse", "Juno"],
            "ci": {
                  "id":"datera-ci",
                  "success_pattern": "Build Successful",
                  "failure_pattern": "Build Failed"
            }
          },
          {
            "project_id": "openstack/cinder",
            "vendor": "Dell",
            "name": "Dell EqualLogic volume driver",
            "description": "The Dell EqualLogic volume driver interacts with configured EqualLogic arrays and supports various operations, such as volume creation and deletion, volume attachment and detachment, snapshot creation and deletion, and clone creation.",
            "maintainers": [
                {
                    "name": "Arkady Kanevsky",
                    "email": "arkady_kanevsky@dell.com",
                    "launchpad_id": "arkady-kanevsky"
                }
            ],
            "wiki": "http://docs.openstack.org/trunk/config-reference/content/dell-equallogic-driver.html",
            "releases": ["Havana", "Icehouse", "Juno", "Kilo"],
            "ci": {
                  "id":"dell-storagecenter-ci",
                  "success_pattern": "Build Successful",
                  "failure_pattern": "Build Failed"
            }
        },
        {
          "project_id": "openstack/cinder",
            "vendor": "Dell",
            "name": "Dell Storage Center volume driver",
            "description": "The Dell Storage Center volume driver interacts with configured Storage Center arrays and supports various operations, such as volume creation and deletion, volume attachment and detachment, snapshot creation and deletion, and clone creation.",
            "maintainers": [
                {
                    "name": "Sean McGinnis",
                    "email": "sean_mcginnis@dell.com",
                    "irc": "smcginnis",
                    "launchpad_id": "sean-mcginnis"
                }
            ],
            "wiki": "http://docs.openstack.org/trunk/config-reference/content/dell-storagecenter-driver.html",
            "releases": ["Kilo"],
            "ci": {
                  "id":"dell-storagecenter-ci",
                  "success_pattern": "Build Successful",
                  "failure_pattern": "Build Failed"
            }
        },
        {
            "project_id": "openstack/cinder",
            "vendor": "EMC",
            "name": "EMC VMAX FC driver",
            "description": "The EMC VMAX FC driver runs volume operations by communicating with the back-end VMAX storage, using the EMC SMI-S Provider.",
            "maintainers": [
                {
                    "name": "Xing Yang",
                    "email": "xing.yang@emc.com",
                    "launchpad_id": "xing-yang"
                }
            ],
            "wiki": "http://docs.openstack.org/trunk/config-reference/content/emc-vmax-driver.html",
            "releases": ["Icehouse", "Juno"],
            "ci": {
                  "id":"emc-vmax-ci",
                  "success_pattern": "Build Successful",
                  "failure_pattern": "Build Failed"
           }
        },
        {
            "project_id": "openstack/cinder",
            "vendor": "EMC",
            "name": "EMC VNX iSCSI direct driver",
            "description": "The EMC VNX iSCSI direct driver runs volume operations by communicating with the back-end VNX storage, using NaviSecCLI.",
            "maintainers": [
                {
                    "name": "Xing Yang",
                    "email": "xing.yang@emc.com",
                    "launchpad_id": "xing-yang"
                }
            ],
            "wiki": "http://docs.openstack.org/trunk/config-reference/content/emc-vnx-direct-driver.html",
            "releases": ["Icehouse", "Juno"],
            "ci": {
                  "id":"emc-vnx-ci",
                  "success_pattern": "Build Successful",
                  "failure_pattern": "Build Failed"
           }
        },
        {
            "project_id": "openstack/cinder",
            "vendor": "EMC",
            "name": "EMC VNX FC direct driver",
            "description": "The EMC VNX FC direct driver runs volume operations by communicating with the back-end VNX storage, using NaviSecCLI.",
            "maintainers": [
                {
                    "name": "Xing Yang",
                    "email": "xing.yang@emc.com",
                    "launchpad_id": "xing-yang"
                }
            ],
            "wiki": "http://docs.openstack.org/trunk/config-reference/content/emc-vnx-direct-driver.html",
            "releases": ["Juno"],
            "ci": {
                  "id":"emc-vnx-ci",
                  "success_pattern": "Build Successful",
                  "failure_pattern": "Build Failed"
           }
        },
        {
            "project_id": "openstack/cinder",
            "vendor": "EMC",
            "name": "EMC XtremIO iSCSI driver",
            "description": "The XtremIO iSCSI driver enables OpenStack clouds to access the XtremIO storage. The XtremIO Cinder driver directs the creation and deletion of volumes on the XtremIO storage and attaches or detaches volumes to/from OpenStack instances or virtual machines (VMs).",
            "maintainers": [
                {
                    "name": "Xing Yang",
                    "email": "xing.yang@emc.com",
                    "launchpad_id": "xing-yang"
                }
            ],
            "wiki": "http://www.xtremio.com/wp-content/uploads/2014/07/h13287-ds-xtremio-openstack.pdf",
            "releases": ["Juno"],
            "ci": {
                  "id":"emc-xio-ci",
                  "success_pattern": "Build Successful",
                  "failure_pattern": "Build Failed"
           }
        },
        {
            "project_id": "openstack/cinder",
            "vendor": "EMC",
            "name": "EMC XtremIO FC driver",
            "description": "The XtremIO FC driver enables OpenStack clouds to access the XtremIO storage. The XtremIO Cinder driver directs the creation and deletion of volumes on the XtremIO storage and attaches or detaches volumes to/from OpenStack instances or virtual machines (VMs).",
            "maintainers": [
                {
                    "name": "Xing Yang",
                    "email": "xing.yang@emc.com",
                    "launchpad_id": "xing-yang"
                }
            ],
            "wiki": "http://www.xtremio.com/wp-content/uploads/2014/07/h13287-ds-xtremio-openstack.pdf",
            "releases": ["Juno"],
            "ci": {
                  "id":"emc-xio-ci",
                  "success_pattern": "Build Successful",
                  "failure_pattern": "Build Failed"
           }
        },
        {
            "project_id": "openstack/cinder",
            "vendor": "EMC",
            "name": "EMC VMAX iSCSI driver",
            "description": "The EMC VMAX iSCSI driver runs volume operations by communicating with the back-end VMAX storage, using the EMC SMI-S Provider.",
            "maintainers": [
                {
                    "name": "Xing Yang",
                    "email": "xing.yang@emc.com",
                    "launchpad_id": "xing-yang"
                }
            ],
            "wiki": "http://docs.openstack.org/trunk/config-reference/content/emc-vmax-driver.html",
            "releases": ["Grizzly", "Havana", "Icehouse", "Juno"],
            "ci": {
                  "id":"emc-vmax-ci",
                  "success_pattern": "Build Successful",
                  "failure_pattern": "Build Failed"
            }
        },
        {
            "project_id": "openstack/cinder",
            "vendor": "Fujitsu",
            "name": "Fujitsu Eternus DX FC Volume driver",
            "description": "This driver supports ETERNUS DX S2 and the S3 series and runs volume operations by communicating with the backend Fujitsu storage.It uses a CIM client in Python called PyWBEM to perform CIM operations over HTTP.",
            "maintainers": [
                {
                    "name": "Jun Ishizaki",
                    "email": "j-ishizaki@jp.fujitsu.com",
                    "launchpad_id": "j-ishizaki"
                }
            ],
            "wiki": "http://docs.openstack.org/trunk/config-reference/content/fujitsu-smis-driver.html",
            "releases": ["Juno"]
          },
        {
            "project_id": "openstack/cinder",
            "vendor": "Fujitsu",
            "name": "Fujitsu Eternus DX ISCSI Volume driver",
            "description": "This driver supports ETERNUS DX S2 and the S3 series and runs volume operations by communicating with the backend Fujitsu storage.It uses a CIM client in Python called PyWBEM to perform CIM operations over HTTP.",
            "maintainers": [
                {
                    "name": "Jun Ishizaki",
                    "email": "j-ishizaki@jp.fujitsu.com",
                    "launchpad_id": "j-ishizaki"
                }
            ],
            "wiki": "http://docs.openstack.org/trunk/config-reference/content/fujitsu-smis-driver.html",
            "releases": ["Juno"]
         },
         {
            "project_id": "openstack/cinder",
            "vendor": "Fusion-io",
            "name": "Fusion-io Control Volume driver",
            "description": "This driver will allow Cinder to interact with the Fusion-io ioControl Hybrid storage array.",
            "maintainers": [
                {
                    "name": "Edward Balduf",
                    "email": "ebalduf@fusionio.com",
                    "launchpad_id": "ebalduf"
                }
            ],
            "wiki": "http://docs.openstack.org/developer/cinder/api/cinder.volume.drivers.fusionio.ioControl.html",
            "releases": ["Juno"]
        },
        {
            "project_id": "openstack/cinder",
            "vendor": "Gluster",
            "name": "GlusterFS driver",
            "description": "This driver enables use of GlusterFS in a similar fashion as the NFS driver. It supports basic volume operations together with snapshot/clone ones.",
            "maintainers": [
                {
                    "name": "Bharat Kumar Kobagana",
                    "email": "bharat.kobagana@redhat.com",
                    "launchpad_id": "bharat-kobagana"
                }
            ],
            "wiki": "http://docs.openstack.org/trunk/config-reference/content/GlusterFS-driver.html",
            "releases": ["Grizzly", "Havana", "Icehouse", "Juno"],
            "ci": {
                "id": "gate-tempest-dsvm-full-glusterfs",
                "success_pattern": "gate-tempest-dsvm-full-glusterfs \\S+ : SUCCESS",
                "failure_pattern": "gate-tempest-dsvm-full-glusterfs \\S+ : FAILURE"
            }
        },
        {
            "project_id": "openstack/cinder",
            "vendor": "HP",
            "name": "HP 3PAR Fibre Channel driver",
            "description": "The HP 3PAR StoreServ Fibre Channel Block Storage (Cinder) driver to provision volumes with an HP 3PAR StoreServ array and attach volumes over Fibre Channel.  The driver communicates over HTTP, HTTPS, and SSH connections.",
            "maintainers": [
                {
                    "name": "Walter Boring",
                    "email": "walter.boring@hp.com",
                    "launchpad_id": "walter-boring"
                },
                {
                    "name": "Kurt Martin",
                    "email": "kurt.f.martin@hp.com",
                    "launchpad_id": "kurt-f-martin"
                }
            ],
            "wiki": "http://docs.openstack.org/trunk/config-reference/content/hp-3par-driver.html",
            "releases": ["Grizzly", "Havana", "Icehouse", "Juno"],
            "ci": {
                  "id":"hp-cinder-ci",
                  "success_pattern": "Build Successful",
                  "failure_pattern": "Build Failed"
           }
        },
        {
            "project_id": "openstack/cinder",
            "vendor": "HP",
            "name": "HP 3PAR iSCSI driver",
            "description": "The HP 3PAR StoreServ iSCSI Block Storage (Cinder) driver to provision volumes with an HP 3PAR StoreServ array and attach volumes over iSCSI.  The driver communicates over HTTP, HTTPS, and SSH connections.",
            "maintainers": [
                {
                    "name": "Walter Boring",
                    "email": "walter.boring@hp.com",
                    "launchpad_id": "walter-boring"
                },
                {
                    "name": "Kurt Martin",
                    "email": "kurt.f.martin@hp.com",
                    "launchpad_id": "kurt-f-martin"
                }
            ],
            "wiki": "http://docs.openstack.org/trunk/config-reference/content/hp-3par-driver.html",
            "releases": ["Grizzly", "Havana", "Icehouse", "Juno"],
            "ci": {
                  "id":"hp-cinder-ci",
                  "success_pattern": "Build Successful",
                  "failure_pattern": "Build Failed"
           }
        },
        {
            "project_id": "openstack/cinder",
            "vendor": "HP",
            "name": "HP LeftHand StoreVirtual driver",
            "description": "The HP StoreVirtual driver can be configured to run in one of two possible modes, legacy mode which uses SSH/CLIQ to communicate with the HP StoreVirtual Storage, or standard mode, which uses a new REST client to communicate with the array.",
            "maintainers": [
                {
                    "name": "Walter Boring",
                    "email": "walter.boring@hp.com",
                    "launchpad_id": "walter-boring"
                },
                {
                    "name": "Kurt Martin",
                    "email": "kurt.f.martin@hp.com",
                    "launchpad_id": "kurt-f-martin"
                }
            ],
            "wiki": "http://docs.openstack.org/trunk/config-reference/content/HPSan-driver.html",
            "releases": ["Diablo", "Essex", "Folsom", "Grizzly", "Havana", "Icehouse", "Juno"],
            "ci": {
                  "id":"hp-cinder-ci",
                  "success_pattern": "Build Successful",
                  "failure_pattern": "Build Failed"
           }
        },
        {
            "project_id": "openstack/cinder",
            "vendor": "Hitachi",
            "name": "HDS HNAS iSCSI and NFS driver",
            "description": "This Block Storage volume driver provides iSCSI and NFS support for HNAS (Hitachi Network-attached Storage) arrays such as, HNAS 3000 and 4000 family.",
            "maintainers": [
                {   "name": "Steve Quinn",
                    "email": "steve.quinn@hds.com",
                    "launchpad_id": "steve-quinn"
                }
            ],
            "wiki": "http://docs.openstack.org/trunk/config-reference/content/hds-hnas-driver.html",
            "releases": ["Juno"],
            "ci": {
                  "id":"hds-hnas-ci",
                  "success_pattern": "Build Successful",
                  "failure_pattern": "Build Failed"
           }
        },
        {
            "project_id": "openstack/cinder",
            "vendor": "Hitachi",
            "name": "HDS iSCSI volume driver",
            "description": "This Block Storage volume driver provides iSCSI support for HUS (Hitachi Unified Storage) arrays such as, HUS-110, HUS-130, and HUS-150.",
            "maintainers": [
                {   "name": "Steve Quinn",
                    "email": "steve.quinn@hds.com",
                    "launchpad_id": "steve-quinn"
                }
            ],
            "wiki": "http://docs.openstack.org/trunk/config-reference/content/hds-volume-driver.html",
            "releases": ["Havana", "Icehouse", "Juno"]
        },
        {
            "project_id": "openstack/cinder",
            "vendor": "Hitachi",
            "name": "Hitachi storage volume driver",
            "description": "This Block Storage volume driver provides iSCSI and Fibre Channel support for Hitachi storages such as, VSP G1000 (Virtual Storage Platform G1000), VSP (Virtual Storage Platform), HUS VM (Hitachi Unified Storage VM), and HUS 100 Family (Hitachi Unified Storage 100 Family).",
            "maintainers": [
                {
                    "name": "Seiji Aguchi",
                    "email": "seiji.aguchi.tr@hitachi.com",
                    "launchpad_id": "seiji-aguchi"
                }
            ],
            "wiki": "http://docs.openstack.org/trunk/config-reference/content/hitachi-storage-volume-driver.html",
            "releases": ["Juno"],
            "ci": {
                  "id":"hds-hnas-ci",
                  "success_pattern": "Build Successful",
                  "failure_pattern": "Build Failed"
           }
        },
        {
            "project_id": "openstack/cinder",
            "vendor": "Huawei",
            "name": "Huawei storage driver",
            "description": "The Huawei driver supports the iSCSI and Fibre Channel connections and enables OceanStor T series unified storage, OceanStor Dorado high-performance storage, and OceanStor HVS high-end storage to provide block storage services for OpenStack.",
            "maintainers": [
                {
                    "name": "Zhang Chao",
                    "email": "zhangchao010@huawei.com",
                    "launchpad_id": "zhangchao010"
                }
            ],
            "wiki": "http://docs.openstack.org/trunk/config-reference/content/huawei-storage-driver.html",
            "releases": ["Havana", "Juno"],
            "ci": {
                   "id": "huawei-ci",
                   "success_pattern": "Build Successful",
                   "failure_pattern": "Build Failed"
            }
        },
        {
            "project_id": "openstack/cinder",
            "vendor": "IBM",
            "name": "IBM GPFS volume driver",
            "description": "The GPFS driver enables the use of GPFS in a fashion similar to that of the NFS driver. With the GPFS driver, instances do not actually access a storage device at the block level. Instead, volume backing files are created in a GPFS file system and mapped to instances, which emulate a block device.",
            "maintainers": [
                {
                    "name": "Sasikanth Eda",
                    "email": "sasikanth.eda@in.ibm.com",
                    "launchpad_id": "sasikanth"
                }
            ],
            "wiki": "http://docs.openstack.org/trunk/config-reference/content/GPFS-driver.html",
            "releases": ["Havana", "Icehouse", "Juno"],
            "ci": {
                   "id": "ibm-gpfs-ci",
                   "success_pattern": "Build Successful",
                   "failure_pattern": "Build Failed"
           }
        },
        {
            "project_id": "openstack/cinder",
            "vendor": "IBM",
            "name": "IBM NAS driver",
            "description": "The IBM NAS Driver works using NFS protocol, and implements other value added features. It allows IBM SONAS and Storwize V7000 Unified filers and NFS based GPFS storage system deployments to provide block storage for OpenStack environment.",
            "maintainers": [
                {
                    "name": "Nilesh Bhosale",
                    "email": "nilesh.bhosale@in.ibm.com",
                    "launchpad_id": "nilesh-bhosale"
                }
            ],
            "wiki": "http://www-03.ibm.com/support/techdocs/atsmastr.nsf/WebIndex/WP102443",
            "releases": ["Icehouse", "Juno"],
            "ci": {
                   "id": "ibm-ibmnas-ci",
                   "success_pattern": "Build Successful",
                   "failure_pattern": "Build Failed"
           }
        },
        {
            "project_id": "openstack/cinder",
            "vendor": "IBM",
            "name": "IBM Storwize family and SVC volume driver",
            "description": "The volume management driver for Storwize family and SAN Volume Controller (SVC) provides OpenStack Compute instances with access to IBM Storwize family or SVC storage systems.",
            "maintainers": [
                {
                    "name": "Tao Bai",
                    "email": "baitaosh@cn.ibm.com",
                    "launchpad_id": "baitao2010"
                }
            ],
            "wiki": "http://docs.openstack.org/trunk/config-reference/content/ibm-storwize-svc-driver.html",
            "releases": ["Folsom", "Grizzly", "Havana", "Icehouse", "Juno"],
            "ci": {
                   "id": "ibm-storwize-ci",
                   "success_pattern": "Build Successful",
                   "failure_pattern": "Build Failed"
           }
        },
        {
            "project_id": "openstack/cinder",
            "vendor": "IBM",
            "name": "IBM XIV/DS8K volume driver",
            "description": "The IBM XIV/DS8K volume driver is installed on OpenStack Cinder nodes and enables utilization of storage resources provided by IBM XIV and DS8000 storage systems.",
            "maintainers": [
                {
                    "name": "Alon Marx",
                    "email": "alonma@il.ibm.com",
                    "launchpad_id": "alonmarx"
                }
            ],
            "wiki": "http://docs.openstack.org/trunk/config-reference/content/ibm-xiv-driver.html",
            "releases": ["Folsom", "Grizzly", "Havana", "Icehouse", "Juno"],
            "ci": {
                   "id": "ibm-xiv-ci",
                   "success_pattern": "Build Successful",
                   "failure_pattern": "Build Failed"
           }
        },
        {
           "project_id": "openstack/cinder",
           "vendor": "Maxta Inc",
           "name": "MxSP Cinder driver",
           "description":"Maxta Storage Platform (MxSP) Cinder driver allows integrating Maxta's Hyper-Converged solution with Openstack.",
           "maintainers": [
               {
                   "name": "Maxta",
                   "email": "openstack@maxta.com",
                   "launchpad_id": "maxtainc"
               }
           ],
           "wiki": "http://www.maxta.com/wp-content/uploads/Maxta_MirantisOpenstack_Runbook.pdf"
        },
        {
            "project_id": "openstack/cinder",
            "vendor": "NetApp",
            "name": "NetApp Unified Driver",
            "description": "The NetApp Unified Driver for Cinder provides integration for multiple storage controller families and protocols. A storage family corresponds to storage systems built on different NetApp technologies such as clustered Data ONTAP, 7-Mode, and NetApp E-Series and EF-Series systems. The storage protocol refers to the protocol used to initiate data storage and access operations to those storage systems.  Clustered Data ONTAP systems can be used with Cinder via Parallelized NFS (pNFS), NFS, and iSCSI storage protocols. 7-mode systems can be used with either NFS or iSCSI. E-Series and EF-Series systems are accessible via iSCSI.",
            "maintainers": [
                {
                    "name": "Clinton Knight",
                    "email": "cknight@netapp.com",
                    "launchpad_id": "clintonk"
                }
            ],
            "wiki": "http://docs.openstack.org/trunk/config-reference/content/netapp-volume-driver.html",
            "releases": ["Essex", "Folsom", "Grizzly", "Havana", "Icehouse", "Juno"],
            "ci": {
                   "id": "netapp-ci",
                   "success_pattern": "Build Successful",
                   "failure_pattern": "Build Failed"
            }
        },
        {
            "project_id": "openstack/cinder",
            "vendor": "Nexenta",
            "name": "Nexenta drivers",
            "description": "NexentaStor Appliance is NAS/SAN software platform designed for building reliable and fast network storage arrays. NexentaStor can serve as a storage node for the OpenStack and its virtual servers through iSCSI and NFS protocols.",
            "maintainers": [
                {
                    "name": "Mikhail Khodos",
                    "email": "mikhail.khodos@nexenta.com",
                    "launchpad_id": "hodosmb"
                }
            ],
            "wiki": "http://docs.openstack.org/trunk/config-reference/content/nexenta-driver.html",
            "releases": ["Essex", "Folsom", "Grizzly", "Havana", "Icehouse", "Juno"]
        },
        {
            "project_id": "openstack/cinder",
            "vendor": "Nimble Storage",
            "name": "Nimble Storage Volume driver",
            "description": "Nimble Storage is hybrid storage combining both flash SSD and near-line SAS disks. The architecture is based on CASL (Cache Accelerated Sequential Layout) where random writes are coalesced in NVRAM + flushed to disks sequentially, with the flash/SSD as read acceleration cache. CASL architecture provides non-disruptive upgrade for compute (processer/memory), cache (flash SSDs), capacity (disk shelves) as well as scale-out where up to four nodes of Nimble controllers can be clustered.",
            "maintainers": [
                {
                    "name": "Jay Wang",
                    "email": "jwang@nimblestorage.com",
                    "launchpad_id": "jwang-6"
                }
            ],
             "wiki": "http://docs.openstack.org/developer/cinder/api/cinder.volume.drivers.nimble.html?highlight=nimble#module-cinder.volume.drivers.nimble",
             "releases": ["Icehouse", "Juno"]
        },
        {
            "project_id": "openstack/cinder",
            "vendor": "OpenStack Community",
            "name": "LVM",
            "description": "The default volume back-end uses local volumes managed by LVM. This driver supports different transport protocols to attach volumes, currently ISCSI and ISER.",
            "maintainers": [
                {
                    "name": "Mike Perez",
                    "email": "thingee@gmail.com",
                    "launchpad_id": "thingee"
                }
            ],
            "wiki": "http://docs.openstack.org/trunk/config-reference/content/lvm-volume-driver.html",
            "releases": ["Austin", "Bexar", "Cactus", "Diablo", "Essex", "Folsom", "Grizzly", "Havana", "Icehouse", "Juno"]
        },
        {
            "project_id": "openstack/cinder",
            "vendor": "OpenStack Community",
            "name": "NFS",
            "description": "The Network File System (NFS) is a distributed file system protocol. An NFS server exports one or more of its file systems, known as shares. An NFS client can mount these exported shares on its own file system. File actions on this mounted remote file system can be performed as if the file system were local.",
            "maintainers": [
                {
                    "name": "Mike Perez",
                    "email": "thingee@gmail.com",
                    "launchpad_id": "thingee"
                }
            ],
            "wiki": "http://docs.openstack.org/trunk/config-reference/content/NFS-driver.html",
            "releases": ["Folsom", "Grizzly", "Havana", "Icehouse", "Juno"]
        },
        {
            "project_id": "openstack/cinder",
            "vendor": "OpenStack Community",
            "name": "SheepDog Volume Driver",
            "description": "Sheepdog is an open-source distributed storage system that provides a virtual storage pool utilizing internal disk of commodity servers. This driver enables use of Sheepdog through QEMU/KVM.",
            "maintainers": [
                {
                    "name": "Mike Perez",
                    "email": "thingee@gmail.com",
                    "launchpad_id": "thingee"
                }
            ],
            "wiki": "http://docs.openstack.org/trunk/config-reference/content/sheepdog-driver.html",
            "releases": ["Icehouse", "Juno"]
        },
        {
            "project_id": "openstack/cinder",
            "vendor": "Oracle",
            "name": "ZFS Storage Appliance driver",
            "description": "Cinder Driver support for Oracle's ZFS Storage Appliance product line. It's an iSCSI driver that uses REST API to communicate out of band with the storage controller.",
            "maintainers": [
                {
                    "name": "Juan Zuluaga",
                    "email": "juan.c.zuluaga@oracle.com",
                    "launchpad_id": "juan-zuluaga"
                }
            ],
            "wiki": "http://docs.openstack.org/developer/cinder/api/cinder.volume.drivers.zfssa.zfssaiscsi.html?highlight=zfs#module-cinder.volume.drivers.zfssa.zfssaiscsi",
            "releases": ["Juno"]
        },
        {
            "project_id": "openstack/cinder",
            "vendor": "ProphetStor",
            "name": "ProphetStor driver",
            "description": "ProphetStor Fibre Channel and iSCSI drivers add support for ProphetStor Flexvisor through OpenStack Cinder. ProphetStor Flexvisor enables commodity x86 hardware as software-defined storage leveraging well-proven ZFS for disk management to provide enterprise grade storage services such as snapshots, data protection with different RAID levels, replication, and deduplication etc.",
            "maintainers": [
                {
                    "name": "Rick Chen",
                    "email": "rick.chen@prophetstor.com",
                    "launchpad_id": "rick-chen"
                }
            ],
            "wiki": "http://docs.openstack.org/trunk/config-reference/content/prophetstor-dpl-driver.html",
            "releases": ["Juno"],
            "ci": {
                   "id": "prophetstor-ci",
                   "success_pattern": "Build Successful",
                   "failure_pattern": "Build Failed"
            }
        },
        {
            "project_id": "openstack/cinder",
            "vendor": "Pure Storage",
            "name": "Volume driver for Pure Storage FlashArray storage system",
            "description": "Pure Storage builds all-flash storage arrays. The active/active controller architecture is based on the Purity Operating Environment and providing an adaptive metadata fabric that is scalable, granular to 512B, and protected. Pure systems are based on durable, resilient MLC flash and providing consistent high performance. Pure Storage FlashArrays leverage deduplication and compression technologies to reduce data written thereby lowering costs and increasing density. FlashArrays are designed for non-disruptive operations and can be upgraded or expanded without disruption or performance degradation.",
            "maintainers": [
                {
                    "name": "Pure Storage Openstack Dev Team",
                    "email": "openstack-dev@purestorage.com",
                    "launchpad_id": "pure-storage-openstack-team"
                }
            ],
            "wiki": "http://specs.openstack.org/openstack/cinder-specs/specs/juno/pure-iscsi-volume-driver.html",
            "releases": ["Juno"],
            "ci": {
                   "id": "purestorage-cinder-ci",
                   "success_pattern": "Build Successful",
                   "failure_pattern": "Build Failed"
          }
        },
        {
            "project_id": "openstack/cinder",
            "vendor": "Scality",
            "name": "Scality SOFS driver",
            "description": "The driver manages volumes on the Scality SOFS filesystem. This gives OpenStack users the option of storing their data on a Scality Ring object storage cluster.",
            "maintainers": [
                {
                    "name": "Jordan Pittier",
                    "email": "jordan.pittier@scality.com",
                    "launchpad_id": "jordan-pittier"
                },
                {
                    "name": "David Pineau",
                    "email": "david.pineau@scality.com",
                    "launchpad_id": "dav-pineau"
                }
            ],
            "wiki": "http://www.scality.com/scality-delivers-persistent-block-storage-for-virtual-machines-march-13th-2013",
            "releases": ["Grizzly", "Havana", "Icehouse", "Juno"]
        },
        {
            "project_id": "openstack/cinder",
            "vendor": "SolidFire",
            "name": "SolidFire Driver",
            "description": "The SolidFire Cluster is a high performance all SSD iSCSI clustered storage device, providing IOP's based QoS. The driver allows to configure the use of a SolidFire cluster with Block Storage.",
            "maintainers": [
                {
                    "name": "John Griffith",
                    "email": "john.griffith@solidfire.com",
                    "launchpad_id": "john-griffith"
                }
            ],
            "wiki": "http://docs.openstack.org/trunk/config-reference/content/solidfire-volume-driver.html",
            "releases": ["Folsom", "Grizzly", "Havana", "Icehouse", "Juno"]
        },
        {
            "project_id": "openstack/cinder",
            "vendor": "VMware",
            "name": "VMware VMDK Driver",
            "description": "The VMware VMDK driver to enable management of the OpenStack Block Storage volumes on vCenter-managed data stores. Volumes are backed by VMDK files on data stores that use any VMware-compatible storage technology such as NFS, iSCSI, FiberChannel, and vSAN.",
            "maintainers": [
                {
                    "name": "Vipin Balachandran",
                    "email": "vbala@vmware.com",
                    "launchpad_id": "vbala"
                }
            ],
            "wiki": "http://docs.openstack.org/trunk/config-reference/content/vmware-vmdk-driver.html",
            "releases": ["Havana", "Icehouse", "Juno"],
            "ci": {
                "id": "vmwareminesweeper",
                "success_pattern": "Build Successful",
                "failure_pattern": "Build Failed"
            }
        },
        {
            "project_id": "openstack/cinder",
            "vendor": "Zadara Storage",
            "name": "Zadara VPSA Cloud Block Storage",
            "description": "There is a volume back-end for Zadara.",
            "maintainers": [
                {
                    "name": "Vladimir Popovski",
                    "email": "vladimir@zadarastorage.com",
                    "launchpad_id": "vladimir.p"
                }
            ],
            "wiki": "http://docs.openstack.org/trunk/config-reference/content/zadara-volume-driver.html",
            "releases": ["Folsom", "Grizzly", "Havana", "Icehouse", "Juno"]
        },
        {
            "project_id": "openstack/ironic",
            "vendor": "AMD/SeaMicro",
            "name": "pxe_seamicro",
            "description": "This driver interfaces with SeaMicro's high density computing devices.",
            "maintainers": [],
            "releases": ["Icehouse", "Juno"],
            "wiki": "http://www.seamicro.com/sites/default/files/SeaMicro-Openstack-Blueprint.pdf"
        },
        {
            "project_id": "openstack/ironic",
            "vendor": "Cray",
            "name": "pxe_snmp",
            "description": "This driver uses SNMP instead of IPMI for power management of power distribution units.",
            "maintainers": [
                {
                    "name": "Stig Telfer",
                    "email": "stelfer@cray.com",
                    "launchpad_id": "stigtelfer"
                }
            ],
            "releases": ["Juno"],
            "wiki": "http://docs.openstack.org/developer/ironic/api/ironic.drivers.pxe.html"
        },
        {
            "project_id": "openstack/ironic",
            "vendor": "HP",
            "name": "iscsi_ilo",
            "description": "The iscsi_ilo driver from HP utilizes HP's integrated lights-out management facilities, in conjunction with an iSCSI-based deploy mechanism. It does not use PXE.",
            "maintainers": [
                {
                    "name": "Ramakrishnan G",
                    "email": "rameshg87@gmail.com",
                    "launchpad_id": "rameshg87"
                }
            ],
            "releases": ["Juno"],
            "wiki": "http://docs.openstack.org/developer/ironic/_modules/ironic/drivers/ilo.html"
        },
        {
            "project_id": "openstack/ironic",
            "vendor": "IBM",
            "name": "pxe_ipminative",
            "description": "pxe_ipminative is like the pxe_ipmitool driver, but substitutes IBM's 'pyghmi' library, a native python IPMI utility, for the generic ipmitool package.",
            "maintainers": [
                {
                    "name": "Ling Gao",
                    "email": "linggao@us.ibm.com",
                    "launchpad_id": "linggao",
                    "irc": "linggao"
                }
            ],
            "releases": ["Icehouse", "Juno"],
            "wiki": "https://wiki.openstack.org/wiki/Ironic/Drivers",
            "ci": {
                "id": "ibm-xcat-ci",
                 "success_pattern": "Build Successful",
                 "failure_pattern": "Build Failed"
               }
        },
        {
            "project_id": "openstack/ironic",
            "vendor": "OpenStack Community",
            "name": "agent_ssh",
            "description": "agent_ssh is a testing driver, which combines the ironic-python-agent deploy mechanism with SSH-based power control to enable upstream CI.",
            "maintainers": [
                {
                    "name": "Jim Rollenhagen",
                    "email": "jim@jimrollenhagen.com",
                    "launchpad_id": "jroll",
                    "irc": "jroll"
                }
            ],
            "releases": ["Juno"],
            "wiki": "http://docs.openstack.org/developer/ironic/api/ironic.drivers.agent.html?highlight=agent%20ssh#ironic.drivers.agent.AgentAndSSHDriver",
            "ci": {
                "id": "jenkins_ci",
                 "success_pattern": "Build Successful",
                 "failure_pattern": "Build Failed"
               }
        },
        {
            "project_id": "openstack/ironic",
            "vendor": "OpenStack Community",
            "name": "agent_ipmitool",
            "description": "agent_ipmitool uses the ironic-python-agent project for advanced provisioning functionality not available with the PXE driver.",
            "maintainers": [
                {
                    "name": "Jim Rollenhagen",
                    "email": "jim@jimrollenhagen.com",
                    "launchpad_id": "jroll",
                    "irc": "jroll"
                }
            ],
            "releases": ["Juno"],
            "wiki": "http://docs.openstack.org/developer/ironic/api/ironic.drivers.agent.html"
        },
        {
            "project_id": "openstack/ironic",
            "vendor": "OpenStack Community",
            "name": "pxe_iboot",
            "description": "This driver uses iBoot instead of IPMI for power management.",
            "maintainers": [
                {
                    "name": "Dan Prince",
                    "irc": "dprince",
                    "email": "dprince@redhat.com",
                    "launchpad_id": "dan-prince"
                }
            ],
            "releases": ["Juno"],
            "wiki": "http://docs.openstack.org/developer/ironic/api/ironic.drivers.pxe.html"
        },
        {
            "project_id": "openstack/ironic",
            "vendor": "OpenStack Community",
            "name": "pxe_ipmitool",
            "description": "pxe_ipmitool is the recommended default driver for Ironic in Icehouse and Juno.",
            "maintainers": [
                {
                    "name": "Devananda van der Veen",
                    "email": "devananda.vdv@gmail.com",
                    "launchpad_id": "devananda",
                    "irc": "devananda"
                }
            ],
            "releases": ["Icehouse", "Juno"],
            "wiki": "http://docs.openstack.org/developer/ironic/api/ironic.drivers.pxe.html"
        },
        {
            "project_id": "openstack/ironic",
            "vendor": "OpenStack Community",
            "name": "pxe_ssh",
            "description": "pxe_ssh is a testing driver, which combines the PXE deploy mechanism with SSH-based power control to enable upstream CI.",
            "maintainers": [
                {
                    "name": "Devananda van der Veen",
                    "email": "devananda.vdv@gmail.com",
                    "launchpad_id": "devananda",
                    "irc": "devananda"
                }
            ],
            "releases": ["Icehouse", "Juno"],
            "wiki": "http://docs.openstack.org/developer/ironic/api/ironic.drivers.pxe.html",
            "ci": {
                "id": "jenkins_ci",
                 "success_pattern": "Build Successful",
                 "failure_pattern": "Build Failed"
               }
        },
        {
            "project_id": "openstack/neutron",
            "vendor": "A10 Networks",
            "name": "A10 Networks LBaaS Driver",
            "description": "A10 Network Driver is specifically designed to manage Thunder Series Appliances.",
            "maintainers": [
                {
                    "name": "Doug Wiegley",
                    "irc": "dougwig",
                    "email": "dougw@a10networks.com",
                    "launchpad_id": "dougwig"
                }
            ],
            "wiki": "https://wiki.openstack.org/wiki/Neutron/LBaaS/A10Networks",
            "releases": ["Juno"],
            "ci": {
                "id": "a10networks-ci",
                "success_pattern": "Build Successful",
                "failure_pattern": "Build Failed"
            }
        },
        {
            "project_id": "openstack/neutron",
            "vendor": "Arista",
            "name": "Arista Neutron ML2 Driver",
            "description": "Arista ML2 Mechanism Driver implement ML2 Plugin Mechanism Driver API. This driver can manage all types of Arista switches.",
            "maintainers": [
                {
                    "name": "Sukhdev Kapur",
                    "irc": "Sukhdev",
                    "email": "sukhdev@arista.com",
                    "launchpad_id": "sukhdev-8"
                }
            ],
            "wiki": "https://wiki.openstack.org/wiki/Arista-neutron-ml2-driver",
            "releases": ["Havana", "Icehouse"],
            "ci": {
                "id": "arista-test",
                "success_pattern": "Build Successful",
                "failure_pattern": "Build Failed"
            }
        },
        {
            "project_id": "openstack/neutron",
            "vendor": "Big Switch",
            "name": "Big Switch Neutron ML2 Driver",
            "description": "An ML2 Mechanism Driver to integrate ML2 deployments into Big Switch/Floodlight controlled networks. This driver only controls physical infrastructure so it is meant to be combined with the openvswitch mechanism driver.",
            "maintainers": [
                {
                    "name": "Kevin Benton",
                    "irc": "kevinbenton",
                    "email": "kevin.benton@bigswitch.com",
                    "launchpad_id": "kevinbenton"
                }
            ],
            "wiki": "http://docs.openstack.org/trunk/config-reference/content/networking-plugin-ml2_bigswitch.html",
            "ci": {
                "id": "bsn",
                "success_pattern": "BigSwitch-ML2-Driver \\S+ : SUCCESS",
                "failure_pattern": "BigSwitch-ML2-Driver \\S+ : FAILURE"
            },
            "releases": ["Icehouse", "Juno"]
        },
        {
            "project_id": "openstack/neutron",
            "vendor": "Big Switch",
            "name": "Big Switch Controller Plugin",
            "description": "Floodlight can be run as the network backend for OpenStack using a Neutron plugin. Neutron exposes a networking-as-a-service model via a REST API that Floodlight has implemented.",
            "maintainers": [
                {
                    "name": "Kevin Benton",
                    "irc": "kevinbenton",
                    "email": "kevin.benton@bigswitch.com",
                    "launchpad_id": "kevinbenton"
                }
            ],
            "wiki": "http://www.openflowhub.org/display/floodlightcontroller/OpenStack",
            "ci": {
                "id": "bsn",
                "success_pattern": "BigSwitch-Plugin \\S+ : SUCCESS",
                "failure_pattern": "BigSwitch-Plugin \\S+ : FAILURE"
            },
            "releases": ["Folsom", "Grizzly", "Havana", "Icehouse"]
        },
        {
            "project_id": "openstack/neutron",
            "vendor": "Brocade",
            "name": "Brocade Neutron plugin",
            "description": "Brocade Neutron Plugin for VDX/VCS provides a means to interface OpenstackÃ¢ÂÂs Networking to orchestrate BrocadeÃ¢ÂÂs physical switches.",
            "maintainers": [
                {
                    "name": "Shiv Haris",
                    "email": "sharis@brocade.com",
                    "irc": "shivharis",
                    "launchpad_id": "shh"
                }
            ],
            "wiki": "https://wiki.openstack.org/wiki/Brocade-neutron-plugin",
            "releases": ["Folsom", "Grizzly", "Havana", "Icehouse"],
            "ci": {
                "id": "bci",
                "success_pattern": "Brocade ML2: SUCCESS",
                "failure_pattern": "Brocade ML2: FAIL"
            }
        },
        {
            "project_id": "openstack/neutron",
            "vendor": "Brocade",
            "name": "Brocade Neutron ML2 Mechanism driver for VDX/VCS Switches",
            "description": "Brocade Neutron ML2 Mechanism Driver for VDX/VCS provides a means to interface Openstack Networking to orchestrate Brocade physical switches.",
            "maintainers": [
                {
                    "name": "Shiv Haris",
                    "email": "sharis@brocade.com",
                    "irc": "shivharis",
                    "launchpad_id": "shh"
                }
            ],
            "wiki": "https://wiki.openstack.org/wiki/Neutron/ML2/BrocadeML2Mechanism",
            "releases": ["Icehouse"],
            "ci": {
                "id": "bci",
                "success_pattern": "Brocade ML2: SUCCESS",
                "failure_pattern": "Brocade ML2: FAIL"
            }
        },
        {
            "project_id": "openstack/neutron",
            "vendor": "Brocade",
            "name": "Brocade Vyatta",
            "description": "CI for Brocade Vyatta vRouter Plugins",
            "maintainers": [
                {
                    "name": "Karthik Natarajan",
                    "email": "dl-grp-vyatta-oss@brocade.com",
                    "launchpad_id": "natarajk"
                }
            ],
            "wiki": "http://specs.openstack.org/openstack/neutron-specs/specs/juno/vyatta_l3_plugin.html",
            "releases": ["Juno"],
            "ci": {
                "id": "brocade-oss-service",
                "success_pattern": "brocade_ci_oss \\S+ : SUCCESS",
                "failure_pattern": "brocade_ci_oss \\S+ : FAIL"
            }
        },
        {
            "project_id": "openstack/neutron",
            "vendor": "Cisco",
            "name": "CSR1kv router service plugin",
            "description": "A Cisco service plugin that implements Neutron L3 router API for CSR1kv VMs.",
            "maintainers": [
                {
                    "name": "Bob Melander",
                    "email": "bmelande@cisco.com",
                    "launchpad_id": "bob-melander"
                }
            ],
            "wiki": "https://",
            "releases": ["Juno"],
            "ci": {
                "id": "csr1kv",
                "success_pattern": "csr1kv \\S+ : SUCCESS",
                "failure_pattern": "csr1kv \\S+ : FAILURE"
            }
        },
        {
            "project_id": "openstack/neutron",
            "vendor": "Cisco",
            "name": "Neutron ML2 Driver For Cisco Nexus Devices",
            "description": "The Cisco Nexus ML2 Mechanism Driver implements the ML2 Plugin Mechanism Driver API. This driver manages multiple types of Cisco Nexus switches.",
            "maintainers": [
                {
                    "name": "Dane Leblanc",
                    "email": "leblancd@cisco.com",
                    "launchpad_id": "leblancd"
                },
                {
                    "name": "Nikolay Fedotov",
                    "email": "nfedotov@cisco.com"
                }

            ],
            "wiki": "https://wiki.openstack.org/wiki/Neutron/ML2/MechCiscoNexus",
            "releases": ["Havana", "Icehouse", "Juno"],
            "ci": {
                "id": "cisco_neutron_ci",
                "success_pattern": "ml2-nexus \\S+ : SUCCESS",
                "failure_pattern": "ml2-nexus \\S+ : FAILURE"
            }
        },
        {
            "project_id": "openstack/neutron",
            "vendor": "Cisco",
            "name": "Cisco APIC ML2 Driver",
            "description": "The Cisco APIC ML2 Mechanism driver provides Neutron's core API abstraction to be implemented against an ACI fabric.",
            "maintainers": [
                {
                    "name": "Ivar Lazzaro",
                    "email": "ivarlazzaro@gmail.com",
                    "launchpad_id": "ivar-lazzaro"
                }
            ],
            "wiki": "https://wiki.openstack.org/wiki/Neutron/Cisco-APIC-ML2-driver",
            "releases": ["Juno"],
            "ci": {
                "id": "cisco_neutron_ci",
                "success_pattern": "apic \\S+ : SUCCESS",
                "failure_pattern": "apic \\S+ : FAILURE"
            }
        },
        {
            "project_id": "openstack/neutron",
            "vendor": "Cisco",
            "name": "Cisco APIC L3 Service",
            "description": "The Cisco APIC L3 service provides Neutron's L3 API abstraction to be implemented against an ACI fabric.",
            "maintainers": [
                {
                    "name": "Ivar Lazzaro",
                    "email": "ivarlazzaro@gmail.com",
                    "launchpad_id": "ivar-lazzaro"
                }
            ],
            "wiki": "https://wiki.openstack.org/wiki/Neutron/Cisco-APIC-ML2-driver",
            "releases": ["Juno"],
            "ci": {
                "id": "cisco_neutron_ci",
                "success_pattern": "apic \\S+ : SUCCESS",
                "failure_pattern": "apic \\S+ : FAILURE"
            }
        },
        {
            "project_id": "openstack/neutron",
            "vendor": "Cisco",
            "name": "Cisco VPNaaS",
            "description": "The Cisco VPNaaS provides VPN IPsec site-to-site connections using the Cisco Cloud Services Router.",
            "maintainers": [
                {
                    "name": "Paul Michali",
                    "email": "pcm@cisco.com",
                    "launchpad_id": "pcm"
                }
            ],
            "wiki": "http://docwiki.cisco.com/wiki/Install_and_Setup_of_Cisco_Cloud_Services_Router_(CSR)_for_OpenStack_VPN",
            "releases": ["Icehouse", "Juno"],
            "ci": {
                "id": "cisco_neutron_ci",
                "success_pattern": "vpnaas-nexus \\S+ : SUCCESS",
                "failure_pattern": "vpnaas-nexus \\S+ : FAILURE"
            }
        },
        {
            "project_id": "openstack/neutron",
            "vendor": "Cisco",
            "name": "Cisco Nexus 1000V Plugin",
            "description": "Cisco Nexus 1000V is a state-of-the-art virtual switch for datacenters. This plugin implements the Neutron core APIs and integrates with the Nexus 1000V control and data planes.",
            "maintainers": [
                {
                    "name": "Abhishek Raut",
                    "email": "abhraut@cisco.com",
                    "launchpad_id": "abhraut"
                },
                {
                    "name": "Sourabh Patwardhan",
                    "email": "sopatwar@cisco.com",
                    "launchpad_id": "sopatwar"
                }

            ],
            "wiki": "https://wiki.openstack.org/wiki/Cisco-n1kv-neutron",
            "releases": ["Havana", "Icehouse", "Juno"],
            "ci": {
                "id": "cisco_neutron_ci",
                "success_pattern": "n1kv_neutron \\S+ : SUCCESS",
                "failure_pattern": "n1kv_neutron \\S+ : FAILURE"
            }
        },
        {
            "project_id": "openstack/neutron",
            "vendor": "Citrix",
            "name": "NetScaler LBaas driver",
            "description": "The NetScaler loadbalancer integration in Neutron LBaaS implements all the LBaaS driver CRUD APIs defined in the IceHouse release: It implements all the defined operations on VIPs, Pools, Pool Members and Health Monitors. The integration consists of a driver class configured in the Neutron config file (neutron.conf), and the accompanying unit tests.",
            "maintainers": [
                {
                    "name": "Youcef Laribi",
                    "email": "youcef.laribi@citrix.com",
                    "launchpad_id": "youcef-laribi"
                }
            ],
            "wiki": "https://wiki.openstack.org/wiki/Neutron/LBaaS/NetScaler",
            "releases": ["Havana", "Icehouse", "Juno"],
            "ci": {
                  "id": "openstack-citrix-ci",
                  "success_pattern": "Build Successful",
                  "failure_pattern": "Build Failed"
           }
        },
        {
            "project_id": "openstack/neutron",
            "vendor": "Cloudbase",
            "name": "Cloudbase Hyper-V Plugin",
            "description": "The Hyper-V Neutron plugin offers the networking options for Hyper-V Server based OpenSTack installations.",
            "maintainers": [
                {
                    "name": "Alessandro Pilotti",
                    "email": "apilotti@cloudbasesolutions.com",
                    "launchpad_id": "alexpilotti"
                },
                {
                    "name": "Octavian Ciuhandu",
                    "email": "ociuhandu@cloudbasesolutions.com",
                    "launchpad_id": "ociuhandu"
                }
            ],
            "wiki": "http://www.cloudbase.it/openstack/",
            "ci": {
                "id": "hyper-v-ci",
                "success_pattern": "Build succeeded",
                "failure_pattern": "Build failed"
            },
            "releases": ["Grizzly", "Havana", "Icehouse", "Juno"]
        },
        {
            "project_id": "openstack/neutron",
            "vendor": "Embrane",
            "name": "Embrane Neutron Plugin",
            "description": "Embrane Neutron plugin enables users to interface Neutron with the Embrane heleos platform.",
            "maintainers": [
                {
                    "name": "Ivar Lazzaro",
                    "irc": "ivar-lazzaro",
                    "email": "ivar@embrane.com",
                    "launchpad_id": "mmaleckk"
                }
            ],
            "wiki": "https://wiki.openstack.org/wiki/Neutron/EmbraneNeutronPlugin",
            "releases": ["Juno"],
            "ci": {
                "id": "eci",
                "success_pattern": "Build Successful",
                "failure_pattern": "Build Failed"
            }
        },
        {
            "project_id": "openstack/neutron",
            "vendor": "Embrane",
            "name": "Embrane LBaaS Driver",
            "description": "Embrane LBaaS driver enables heleos load balancing services using Neutron's API.",
            "maintainers": [
                {
                    "name": "Ivar Lazzaro",
                    "irc": "ivar-lazzaro",
                    "email": "ivar@embrane.com",
                    "launchpad_id": "mmaleckk"
                }
            ],
            "releases": ["Icehouse", "Juno"],
            "wiki": "https://wiki.openstack.org/wiki/Neutron/LBaaS/EmbraneDriver",
            "ci": {
                "id": "eci",
                "success_pattern": "Build Successful",
                "failure_pattern": "Build Failed"
            }
        },
        {
            "project_id": "openstack/neutron",
            "vendor": "Extreme Networks",
            "name": "Extreme Networks Plugin",
            "description": "The Extreme Networks OpenStack plugin runs on Extreme XOS 15.3 and later releases. This plug-in is supported on all EXOS based platforms and includes the latest OpenStack API capabilities. The Extreme Networks OpenStack 2.0 plugin enables Ã¢ÂÂNetworking-as-a-ServiceÃ¢ÂÂ for both Physical and Virtual Extreme Networks.",
            "wiki": "http://extrcdn.extremenetworks.com/wp-content/uploads/2014/02/SDN_OpenStack_Install_Guide_Final1.pdf"
        },
        {
            "project_id": "openstack/neutron",
            "vendor": "Freescale",
            "name": "Freescale SDN ML2 Mechanism Driver",
            "description": "Freescale SDN ML2 Mechanism Driver is designed to support Cloud Resource Discovery Service (CRD).",
            "maintainers": [
                {
                    "name": "Freescale Openstack Team",
                    "irc": "trinaths",
                    "email": "trinath.somanchi@freescale.com",
                    "launchpad_id": "trinath-somanchi"
                }
            ],
            "wiki": "https://wiki.openstack.org/wiki/Freescale_SDN_ML2_Mechanism_Driver",
            "releases": ["Juno"],
            "ci": {
                "id": "freescale-ci",
                "success_pattern": "Freescale-ML2-Mechanism-Driver \\S+ : SUCCESS",
                "failure_pattern": "Freescale-ML2-Mechanism-Driver \\S+ : FAILURE"
            }
        },
        {
            "project_id": "openstack/neutron",
            "vendor": "Freescale",
            "name": "Freescale FWaaS Plugin",
            "description": "Freescale FWaaS Plugin is designed to support Cloud Resource Discovery Service (CRD).",
            "maintainers": [
                {
                    "name": "Freescale Openstack Team",
                    "irc": "trinaths",
                    "email": "trinath.somanchi@freescale.com",
                    "launchpad_id": "trinath-somanchi"
                }
            ],
            "wiki": "https://wiki.openstack.org/wiki/Freescale_Firewall_as_a_Service_Plugin",
            "releases": ["Kilo"],
            "ci": {
                "id": "freescale-ci",
                "success_pattern": "Freescale-FWaaS-Plugin \\S+ : SUCCESS",
                "failure_pattern": "Freescale-FWaaS-Plugin \\S+ : FAILURE"
            }
        },
        {
            "project_id": "openstack/neutron",
            "vendor": "IBM",
            "name": "IBM SDN-VE Plugin",
            "description": "This plugin implements Neutron v2 APIs by using IBM-SDNVE controller.",
            "maintainers": [
                {
                    "name": "Daya Kamath",
                    "email": "dkamath@us.ibm.com",
                    "launchpad_id": "daya-k"
                }
            ],
            "wiki": "https://wiki.openstack.org/wiki/IBM-Neutron",
            "releases": ["Juno"],
            "ci": {
                  "id":"ibmsdnve",
                  "success_pattern": "Build Successful",
                  "failure_pattern": "Build Failed"
           }
        },
        {
            "project_id": "openstack/neutron",
            "vendor": "Juniper",
            "name": "Juniper Networks plug-in for OpenStack Neutron",
            "description": "The Juniper Networks plug-in for OpenStack Neutron enables orchestration of virtual and physical network configurations. The plug-in supports Junos Space Network Director API (NDAPI) as well as NETCONF/DMI to configure the physical network.",
            "wiki": "http://www.juniper.net/techpubs/en_US/release-independent/junos/topics/topic-map/openstack-neutron-dmi-plugin.html",
            "maintainers": [
               {
                   "name": "Chandan Dutta Chowdhury",
                   "email": "chandanc@juniper.net",
                   "launchpad_id": "chandanc"
                }
            ]
        },
        {
            "project_id": "openstack/neutron",
            "vendor": "Juniper",
            "name": "Juniper Opencontrail plugin for Neutron resources",
            "description": "Opencontrail is open source network virtualization solution. It uses standards based BGP L3VPN closed user groups to implement virtual networks.",
            "maintainers": [
                {
                    "name": "Praneet Bachheti",
                    "email": "praneetb@juniper.net",
                    "launchpad_id": "praneetb"
                },
                {
                    "name": "Hampapur Ajay",
                    "email": "hajay@juniper.net",
                    "launchpad_id": "hajay"
                }
            ],
            "wiki": "http://opencontrail.org/opencontrail-architecture-documentation",
            "releases": ["Juno"]
        },
        {
            "project_id": "openstack/neutron",
            "vendor": "Mellanox",
            "name": "Mellanox Neutron Plugin",
            "description": "The Openstack Mellanox Neutron plugin supports Mellanox embedded switch functionality as part of the VPI (Ethernet/InfiniBand) HCA. Mellanox Neutron Plugin allows hardware vNICs (based on SR-IOV virtual functions) per each Virtual Machine vNIC to have its unique connectivity, security, and QoS attributes.",
            "maintainers": [
                {
                    "name": "Omri Marcovitch",
                    "irc": "omrim",
                    "email": "omrim@mellanox.com",
                    "launchpad_id": "omrim"
                }
            ],
            "wiki": "https://wiki.openstack.org/wiki/Mellanox-Neutron",
            "releases": ["Havana", "Icehouse"],
            "ci": {
                "id": "mellanox",
                "success_pattern": "Check-MLNX-Neutron-plugin \\S+ : SUCCESS",
                "failure_pattern": "Check-MLNX-Neutron-plugin \\S+ : FAILURE"
            }
        },
        {
            "project_id": "openstack/neutron",
            "vendor": "Mellanox",
            "name": "Mellanox Neutron ML2 Driver",
            "description": "The Openstack Mellanox Neutron ML2 Driver supports Mellanox embedded switch functionality as part of the VPI (Ethernet/InfiniBand) HCA. Mellanox ML2 Driver allows hardware vNICs (based on SR-IOV virtual functions) per each Virtual Machine vNIC to have its unique connectivity, security, and QoS attributes.",
            "maintainers": [
                {
                    "name": "Omri Marcovitch",
                    "irc": "omrim",
                    "email": "omrim@mellanox.com",
                    "launchpad_id": "omrim"
                }
            ],
            "wiki": "https://wiki.openstack.org/wiki/Mellanox-Neutron-ML2",
            "releases": ["Icehouse", "Juno"],
            "ci": {
                "id": "mellanox",
                "success_pattern": "Check-MLNX-Neutron-ML2-driver \\S+ : SUCCESS",
                "failure_pattern": "Check-MLNX-Neutron-ML2-driver \\S+ : FAILURE"
            }
        },
        {
            "project_id": "openstack/neutron",
            "vendor": "Mellanox",
            "name": "Mellanox Neutron ML2 SR-IOV Driver",
            "description": "The Openstack Mellanox Neutron ML2 SR-IOV Driver supports Mellanox embedded switch functionality as part of the VPI (Ethernet/InfiniBand) HCA. Mellanox Neutron ML2 SR-IOV Driver allows hardware vNICs (based on SR-IOV virtual functions) per each Virtual Machine vNIC to have its unique connectivity, security, and QoS attributes.",
            "maintainers": [
                {
                    "name": "Omri Marcovitch",
                    "irc": "omrim",
                    "email": "omrim@mellanox.com",
                    "launchpad_id": "omrim"
                }
            ],
            "wiki": "https://wiki.openstack.org/wiki/SR-IOV-Passthrough-For-Networking",
            "releases": ["Juno"],
            "ci": {
                "id": "mellanox",
                "success_pattern": "Check-MLNX-Neutron-ML2-driver \\S+ : SUCCESS",
                "failure_pattern": "Check-MLNX-Neutron-ML2-driver \\S+ : FAILURE"
            }
        },
        {
            "project_id": "openstack/neutron",
            "vendor": "Midokura",
            "name": "MidoNet Plugin",
            "description": "MidoNet Neutron plugin enables MidoNet virtual networking technology for those using OpenStack Neutron cloud networking orchestration.",
            "maintainers": [
                {
                    "name": "Lucas Eznarriaga",
                    "email": "lucas@midokura.com",
                    "irc": "luqas"
                }
            ],
            "wiki": "https://wiki.openstack.org/wiki/Spec-QuantumMidoNetPlugin",
            "releases": ["Juno"],
            "ci": {
                "id": "midokura",
                "success_pattern": "Build succeed",
                "failure_pattern": "Build failed"
            }
        },
        {
            "project_id": "openstack/neutron",
            "vendor": "NEC",
            "name": "NEC OpenFlow Plugin",
            "description": "NEC OpenFlow plugin talks to OpenFlow Controller and each Neutron would be mapped to an virtual layer-2 network slice on an OpenFlow enabled network. Trema Sliceable Switch (Open Source Implementation) and NEC ProgrammableFlow Controller are supported.",
            "maintainers": [
                {
                    "name": "Akihiro Motoki",
                    "irc": "amotoki",
                    "email": "motoki@da.jp.nec.com",
                    "launchpad_id": "amotoki"
                }
            ],
            "wiki": "https://wiki.openstack.org/wiki/Neutron/NEC_OpenFlow_Plugin",
            "releases": ["Folsom", "Grizzly", "Havana", "Icehouse", "Juno"],
            "ci": {
                "id": "nec-openstack-ci",
                "success_pattern": "Build succeed",
                "failure_pattern": "Build failed"
            }
        },
        {
            "project_id": "openstack/neutron",
            "vendor": "Nuage Networks",
            "name": "Nuage Networks Neutron Plugin",
            "description": "Nuage Networks OpenStack networking plugin enables integration of OpenStack with Nuage Networks Virtual Service Platform (VSP).",
            "maintainers": [
                {
                    "name": "Ronak Shah",
                    "email": "ronak.malav.shah@gmail.com",
                    "irc": "rms_13",
                    "launchpad_id": "ronak-malav-shah"
                }
            ],
            "wiki": "http://docs.openstack.org/trunk/config-reference/content/networking-plugin-nuage.html",
            "releases": ["Icehouse", "Juno"],
            "ci": {
                "id": "nuage-ci",
                "success_pattern": "SUCCESS",
                "failure_pattern": "FAIL"
            }
        },
        {
            "project_id": "openstack/neutron",
            "vendor": "Nuage Networks",
            "name": "Nuage Networks ML2 driver",
            "description": "Nuage Networks OpenStack ML2 plugin driver enables integration of OpenStack with Nuage Networks Virtual Service Platform (VSP).",
            "maintainers": [
                {
                    "name": "Ronak Shah",
                    "email": "ronak.malav.shah@gmail.com",
                    "irc": "rms_13",
                    "launchpad_id": "ronak-malav-shah"
                }
            ],
            "wiki": "http://docs.openstack.org/trunk/config-reference/content/networking-plugin-ml2_nuage.html",
            "releases": ["Juno"],
            "ci": {
                "id": "nuage-ci",
                "success_pattern": "ML2-SUCCESS",
                "failure_pattern": "ML2-FAIL"
            }
        },
        {
            "project_id": "openstack/neutron",
            "vendor": "One Convergence",
            "name": "One Convergence NVSD Controller",
            "description": "One Convergence Neutron plugin provides Neutron APIs for the network virtualization solution implemented with One Convergence Network Virtualization and Services Delivery(NVSD) Controller.",
            "maintainers": [
                {
                    "name": "Gary Kotton",
                    "email": "gkotton@redhat.com",
                    "launchpad_id": "garyk"
                }
            ],
            "wiki": "http://docs.openstack.org/trunk/config-reference/content/networking-plugin-nvsd.html",
            "releases": ["Juno"],
            "ci": {
                "id": "oneconvergence",
                "success_pattern": "success",
                "failure_pattern": "fail"
            }
        },
        {
            "project_id": "openstack/neutron",
            "vendor": "OpenDaylight",
            "name": "OpenDaylight ML2 MechanismDriver",
            "description": "OpenDaylight has driver for Neutron ML2 (Modular Layer 2) plugin to enable communication between Neutron and OpenDaylight. On the SDN controller side, OpenDaylight has northbound APIs to interact with Neutron and use OVSDB (Open vSwitch Database Management Protocol) for southbound configuration of vSwitches on compute nodes. Thus OpenDaylight can manage network connectivity and initiate GRE or VXLAN tunnels for compute nodes.",
            "maintainers": [
                {
                    "name": "Kyle Mestery",
                    "irc": "mestery",
                    "email": "kmestery@cisco.com",
                    "launchpad_id": "mestery"
                }
            ],
            "wiki": "http://openstack.redhat.com/OpenDaylight_integration",
            "releases": ["Juno"],
            "ci": {
                "id": "odl-jenkins",
                "success_pattern": "SUCCESS",
                "failure_pattern": "FAILURE"
            }
        },
        {
            "project_id": "openstack/neutron",
            "vendor": "OpenStack Community",
            "name": "Linux Bridge Plugin",
            "description": "Neutron Linux Bridge plugin configures a Linux Bridge to create Neutron Network, Port, and Attachment abstractions. Plugin manages VLANs.",
            "maintainers": [
                {
                    "name": "Kyle Mestery",
                    "irc": "rmestery",
                    "email": "kmestery@cisco.com",
                    "launchpad_id": "mestery"
                }
            ],
            "wiki": "http://docs.openstack.org/trunk/config-reference/content/networking-plugin-linuxbridge_agent.html",
            "releases": ["Folsom", "Grizzly", "Havana", "Icehouse"]
        },
        {
            "project_id": "openstack/neutron",
            "vendor": "OpenStack Community",
            "name": "Modular Layer 2 Plugin",
            "description": "The ML2 plug-in is a core plug-in working as part of the OpenStack Neutron Virtual Network Service",
            "maintainers": [
                {
                    "name": "Kyle Mestery",
                    "irc": "rmestery",
                    "email": "kmestery@cisco.com",
                    "launchpad_id": "mestery"
                }
            ],
            "wiki": "http://docs.openstack.org/trunk/config-reference/content/networking-options-plugins-ml2.html",
            "releases": ["Havana", "Icehouse", "Juno"]
        },
        {
            "project_id": "openstack/neutron",
            "vendor": "OpenStack Community",
            "name": "Meta Plugin",
            "description": "The Meta Plug-in allows you to use multiple plug-ins at the same time.",
            "maintainers": [
                {
                    "name": "Nachi Ueno",
                    "irc": "nati_ueno",
                    "email": "nachi@ntti3.com",
                    "launchpad_id": "nati-ueno"
                }
            ],
            "releases": ["Folsom", "Grizzly", "Havana", "Icehouse", "Juno"],
            "wiki": "http://docs.openstack.org/trunk/config-reference/content/networking-plugin-meta.html",
            "ci": {
                "id": "metaplugintest",
                "success_pattern": "Build Successful",
                "failure_pattern": "Build Failed"
            }
        },
        {
            "project_id": "openstack/neutron",
            "vendor": "OpenStack Community",
            "name": "OpenFlow Agent",
            "description": "The OpenFlow Agent (aka. ofagent) and the associated ML2 Mechanism Driver controls OpenFlow switches as a part of OpenStack Neutron.",
            "maintainers": [
                {
                    "name": "Yamamoto Takashi",
                    "irc": "yamamoto",
                    "email": "yamamoto@valinux.co.jp",
                    "launchpad_id": "yamamoto"
                }
            ],
            "wiki": "https://github.com/osrg/ryu/wiki/OpenStack",
            "releases": ["Icehouse", "Juno"],
            "ci": {
                "id": "neutronryu",
                "success_pattern": "check-tempest-dsvm-ofagent \\S+ : SUCCESS",
                "failure_pattern": "check-tempest-dsvm-ofagent \\S+ : FAILURE"
            }
        },
        {
            "project_id": "openstack/neutron",
            "vendor": "OpenStack Community",
            "name": "Open vSwitch Plugin",
            "description": "The Open vSwitch plug-in is a core plug-in working as part of the OpenStack Neutron Virtual Network Service.",
            "maintainers": [
                {
                    "name": "Kyle Mestery",
                    "irc": "mestery",
                    "email": "kmestery@cisco.com",
                    "launchpad_id": "mestery"
                }
            ],
            "wiki": "http://docs.openstack.org/trunk/config-reference/content/networking-plugin-openvswitch_agent.html",
            "releases": ["Juno"]
        },
        {
            "project_id": "openstack/neutron",
            "vendor": "PLUMgrid",
            "name": "PLUMgrid OpenStack Networking Suite Neutron Plugin",
            "description": "PLUMgrid Neutron Plugin enables PLUMgrid Open Networking Suite which is a secure comprehensive and open software solution that delivers terabits of performance and scales across tens of thousands of workloads.",
            "maintainers": [
                {
                    "name": "Fawad Khaliq",
                    "irc": "fawadkhaliq",
                    "email": "fawad@plumgrid.com",
                    "launchpad_id": "fawadkhaliq"
                }
            ],
            "wiki": "https://wiki.openstack.org/wiki/PLUMgrid-Neutron",
            "releases": ["Grizzly", "Havana", "Icehouse", "Juno", "Kilo"],
            "ci": {
                "id": "plumgrid-ci",
                 "success_pattern": "Build Successful",
                 "failure_pattern": "Build Failed"
            }
        },
        {
            "project_id": "openstack/neutron",
            "vendor": "Radware",
            "name": "Radware LBaaS Driver for Alteon.",
            "description": "Radware LBaaS Driver provides load balancing as a service based on Alteon, enabling on demand provisioning of load balancing capacity, overlay network agnostic, overlay gateway bypass, high availability, tenant isolation and SLA guarantee.",
            "maintainers": [
                {
                    "name": "Avishay Balderman",
                    "irc": "avishayb",
                    "email": "avishayb@radware.com",
                    "launchpad_id": "avishayb"

                },
                {
                    "name": "Evgeny Fedoruk",
                    "irc": "evgenyf",
                    "email": "evgenyf@radware.com",
                    "launchpad_id": "evgenyf"
                },
                {
                    "name": "Samuel Bercovici",
                    "irc": "samuelbercovici",
                    "email": "samuelb@radware.com",
                    "launchpad_id": "samuelb"
                }
            ],
            "wiki": "https://wiki.openstack.org/wiki/Neutron/LBaaS/RadwareAlteon",
            "releases": ["Havana", "Icehouse", "Juno"],
            "ci": {
               "id": "radware3rdpartytesting",
                "success_pattern": "Build Successful",
                "failure_pattern": "Build Failed"
           }
        },
        {
            "project_id": "openstack/neutron",
            "vendor": "Tail-f",
            "name": "Tail-f NCS ML2 Mechanism Driver",
            "description": "The Tail-f NCS Mechanism Driver allows OpenStack to drive the Tail-f Network Control System (NCS) so that NCS can provision a multi-vendor network in response to Neutron configuration changes.",
            "maintainers": [
                {
                    "name": "Luke Gorrie",
                    "irc": "lukego",
                    "email": "luke@tail-f.com",
                    "launchpad_id": "lukego"
                }
            ],
            "releases": ["Havana", "Icehouse"],
            "wiki": "https://wiki.openstack.org/wiki/Neutron/ML2/Tail-f-NCS-neutron-ml2-driver",
            "ci": {
                "id": "tailfncs",
                "success_pattern": "Successful",
                "failure_pattern": "Failed"
            }
        },
        {
            "project_id": "openstack/neutron",
            "vendor": "VMware",
            "name": "VMware NSX Network Virtualization Platform Plugin",
            "description": "The NSX plug-in is designed to manage VMware NSX platform, formerly known as Nicira NVP.",
            "maintainers": [
                {
                    "name": "Aaron Rosen",
                    "irc": "arosen",
                    "email": "aaronorosen@gmail.com",
                    "launchpad_id": "arosen"
                }
            ],
            "wiki": "http://docs.openstack.org/admin-guide-cloud/content/nsx_plugin.html",
            "releases": ["Essex", "Folsom", "Grizzly", "Havana", "Icehouse", "Juno"],
            "ci": {
                "id": "vmwareminesweeper",
                "success_pattern": "Build Successful",
                "failure_pattern": "Build Failed"
            }
        },
        {
            "project_id": "openstack/neutron",
            "vendor": "vArmour",
            "name": "vArmour-Firewall",
            "description": "The vArmour driver is used to configure vArmour firewall as FWaaS in OpenStack environment.",
            "maintainers": [
                {
                    "name": "Gary Duan",
                    "email": "openstack-ci-test@varmour.com",
                    "irc": "garyduan",
                    "launchpad_id": "gduan"
                }
            ],
            "wiki": "https://wiki.openstack.org/wiki/Neutron/vArmour-Firewall",
            "releases": ["Juno"],
            "ci": {
                "id": "varmourci",
                "success_pattern": "Successful",
                "failure_pattern": "Failed"
            }
        },
        {
            "project_id": "openstack/nova",
            "vendor": "Cloudbase",
            "name": "Hyper-V virtualization platform",
            "description": "It is possible to use Hyper-V as a compute node within an OpenStack Deployment. The nova-compute service runs as openstack-compute, a 32-bit service directly upon the Windows platform with the Hyper-V role enabled.",
            "maintainers": [
                {
                    "name": "Alessandro Pilotti",
                    "email": "apilotti@cloudbasesolutions.com",
                    "launchpad_id": "alexpilotti"
                },
                {
                    "name": "Octavian Ciuhandu",
                    "email": "ociuhandu@cloudbasesolutions.com",
                    "launchpad_id": "ociuhandu"
                }
            ],
            "wiki": "http://wiki.cloudbase.it/hyperv-tempest-exclusions",
            "releases": ["Folsom", "Grizzly", "Havana", "Icehouse", "Juno"],
            "ci": {
                "id": "hyper-v-ci",
                "success_pattern": "Build succeeded",
                "failure_pattern": "Build failed"
            }
        },
        {
            "project_id": "openstack/nova",
            "vendor": "IBM",
            "name": "PowerKVM",
            "description": "IBM PowerKVM provides an open virtualization choice for IBM scale-out Linux systems based on the PowerKVM technology. This solution includes the Linux open source technology of KVM virtualization, and is designed to complement the performance, scalability and security qualities of Linux.",
            "maintainers": [
                {
                    "name": "Kurt Taylor",
                    "email": "krtaylor@us.ibm.com",
                    "launchpad_id": "krtaylor"
                }
            ],
            "wiki": "http://www.ibm.com/systems/power/software/linux/powerkvm",
            "releases": ["Icehouse"],
            "ci": {
                  "id":"powerkvm",
                  "success_pattern": "Build Successful",
                  "failure_pattern": "Build Failed"
           }
        },
        {
            "project_id": "openstack/nova",
            "vendor": "IBM",
            "name": "PowerVM",
            "description": "Removed from Nova during Icehouse, PowerVM compute driver connects to an Integrated Virtualization Manager (IVM) to perform PowerVM Logical Partition (LPAR) deployment and management.",
            "maintainers": [
                {
                    "name": "Tiago Rodrigues de Mello",
                    "email": "tmello@linux.vnet.ibm.com",
                    "launchpad_id": "timello"
                }
            ],
            "wiki": "http://docs.openstack.org/trunk/config-reference/content/powervm.html",
            "releases": ["Folsom", "Grizzly", "Havana"]
        },
        {
            "project_id": "openstack/nova",
            "vendor": "OpenStack Community",
            "name": "Baremetal driver",
            "description": "The baremetal driver was a hypervisor driver for OpenStack Nova Compute that was added during Grizzly, but soon spun out into the Ironic project. The driver, though deprecated, remained in Nova until the Ironic driver was landed during Juno. Baremetal will be removed in Kilo.",
            "maintainers": [
            ],
            "wiki": "https://wiki.openstack.org/wiki/Baremetal",
            "releases": ["Grizzly", "Havana", "Icehouse", "Juno"],
            "ci": {
                 "id": "tripleo_ci",
                 "success_pattern": "Build Successful",
                 "failure_pattern": "Build Failed"
              }
        },
        {
            "project_id": "openstack/nova",
            "vendor": "OpenStack Community",
            "name": "Docker driver",
            "description": "Adding during Havana, but removed from Nova during Icehouse, a prototype now lives outside the Nova tree. The Docker driver is a hypervisor driver for OpenStack Compute. Docker extends LXC with a high level API providing a lightweight virtualization solution that runs processes in isolation.",
            "maintainers": [
                {
                    "name": "Michael Still",
                    "email": "mikal@stillhq.com",
                    "launchpad_id": "milakstill"
                }
            ],
            "wiki": "http://docs.openstack.org/trunk/config-reference/content/docker.html",
            "releases": ["Havana"]
        },
        {
            "project_id": "openstack/nova",
            "vendor": "OpenStack Community",
            "name": "Ironic driver",
            "description": "Compute driver for Ironic (Bare Metal Provisioning) program, enabling Nova to provision physical machines. Built during Icehouse within the Ironic tree, it was moved to Nova's tree during Juno.",
            "maintainers": [
                {
                    "name": "Devananda van der Veen",
                    "email": "devananda.vdv@gmail.com",
                    "launchpad_id": "devananda",
                    "irc": "devananda"
                }
            ],
            "ci": {
                "id": "jenkins_ci",
                 "success_pattern": "Build Successful",
                 "failure_pattern": "Build Failed"
               },
            "releases": ["Icehouse", "Juno"],
            "wiki": "https://wiki.openstack.org/wiki/Ironic"
        },
        {
            "project_id": "openstack/nova",
            "vendor": "OpenStack Community",
            "name": "KVM",
            "description": "KVM is configured as the default hypervisor for Compute.",
            "maintainers": [
                {
                    "name": "Michael Still",
                    "email": "mikal@stillhq.com",
                    "launchpad_id": "milakstill"
                }
            ],
            "wiki": "http://docs.openstack.org/trunk/config-reference/content/kvm.html",
            "releases": ["Austin", "Bexar", "Cactus", "Diablo", "Essex", "Folsom", "Grizzly", "Havana", "Icehouse", "Juno"]
        },
        {
            "project_id": "openstack/nova",
            "vendor": "OpenStack Community",
            "name": "LXC (Linux Containers)",
            "description": "LXC (Linux containers) is a virtualization technology that works at the operating system level. LXC (as currently implemented using libvirt in the Compute service) is not a secure virtualization technology for multi-tenant environments.",
            "maintainers": [
                {
                    "name": "Michael Still",
                    "email": "mikal@stillhq.com",
                    "launchpad_id": "milakstill"
                }
            ],
            "releases": ["Austin", "Bexar", "Cactus", "Diablo", "Essex", "Folsom", "Grizzly", "Havana", "Icehouse", "Juno"],
            "wiki": "http://docs.openstack.org/trunk/config-reference/content/lxc.html"
        },
        {
            "project_id": "openstack/nova",
            "vendor": "OpenStack Community",
            "name": "QEMU",
            "description": "From the perspective of the Compute service, the QEMU hypervisor is very similar to the KVM hypervisor. The main difference is that QEMU does not support native virtualization.",
            "maintainers": [
                {
                    "name": "Michael Still",
                    "email": "mikal@stillhq.com",
                    "launchpad_id": "milakstill"
                }
            ],
            "wiki": "http://docs.openstack.org/trunk/config-reference/content/qemu.html",
            "releases": ["Austin", "Bexar", "Cactus", "Diablo", "Essex", "Folsom", "Grizzly", "Havana", "Icehouse", "Juno"],
            "ci": {
                "id": "jenkins_ci",
                 "success_pattern": "Build Successful",
                 "failure_pattern": "Build Failed"
               }
        },
        {
            "project_id": "openstack/nova",
            "vendor": "OpenStack Community",
            "name": "XenAPI",
            "description": "XenAPI compute driver connects to XenServer hypervisors via XenAPI. Used to power Rackspace Cloud Servers (Public Cloud).",
            "maintainers": [
                {
                    "name": "Michael Still",
                    "email": "mikal@stillhq.com",
                    "launchpad_id": "milakstill"
                }
            ],
            "wiki": "http://docs.openstack.org/trunk/config-reference/content/introduction-to-xen.html",
            "ci": {
                "id": "citrix_xenserver_ci",
                 "success_pattern": "Build Successful",
                 "failure_pattern": "Build Failed"
            },
            "releases": ["Austin", "Bexar", "Cactus", "Diablo", "Essex", "Folsom", "Grizzly", "Havana", "Icehouse", "Juno"]
        },
        {
            "project_id": "openstack/nova",
            "vendor": "OpenStack Community",
            "name": "Xen+Libvirt",
            "description": "Support for the Xen hypervisor when used with libvirt.",
            "maintainers": [
                {
                    "name": "Michael Still",
                    "email": "mikal@stillhq.com",
                    "launchpad_id": "milakstill"
                }
            ],
            "wiki": "http://docs.openstack.org/trunk/config-reference/content/introduction-to-xen.html",
            "releases": ["Austin", "Bexar", "Cactus", "Diablo", "Essex", "Folsom", "Grizzly", "Havana"],
            "ci": {
                 "id": "jenkins_ci",
                 "success_pattern": "Build Successful",
                 "failure_pattern": "Build Failed"
                }
        },
        {
            "project_id": "openstack/nova",
            "vendor": "VMware",
            "name": "VMware vSphere",
            "description": "OpenStack Compute supports the VMware vSphere product family. The VMware vCenter driver enables the nova-compute service to communicate with a VMware vCenter server that manages one or more ESX host clusters.",
            "wiki": "http://docs.openstack.org/trunk/config-reference/content/vmware.html",
            "ci": {
                "id": "vmwareminesweeper",
                "success_pattern": "success",
                "failure_pattern": "fail"
            },
            "releases": ["Grizzly", "Havana", "Icehouse", "Juno"],
            "maintainers": [
                {
                    "name": "Tracy Jones",
                    "email": "tjones@vmware.com",
                    "irc": "tjones",
                    "launchpad_id": "tjones-i"
                },
                {
                    "name": "Gary Kotton",
                    "email": "gkotton@redhat.com",
                    "launchpad_id": "garyk"
                },
                {
                    "name": "Vui Chiap Lam",
                    "email": "vui@vmware.com",
                    "launchpad_id": "vui"
                }
            ]
        },
          {
            "project_id": "openstack/sahara",
            "vendor": "Hortonworks",
            "name": "Hortonworks Data Platform Plugin",
            "description": "The Hortonworks Data Platform (HDP) Sahara plugin provides a way to provision HDP clusters on OpenStack using templates in a single click and in an easily repeatable fashion.",
            "maintainers": [
                {
                    "name": "Sergey Lukjanov",
                    "email": "slukjanov@mirantis.com",
                    "launchpad_id": "slukjanov"
                }
            ],
            "wiki": "http://docs.openstack.org/developer/sahara/userdoc/hdp_plugin.html",
            "releases": ["Icehouse", "Juno"],
            "ci": {
                "id": "savanna-ci",
                "success_pattern": "gate-sahara-integration-hdp.* \\S+ : SUCCESS",
                "failure_pattern": "gate-sahara-integration-hdp.* \\S+ : FAILURE"
               }
          },
          {
            "project_id": "openstack/sahara",
            "vendor": "OpenStack Community",
            "name": "Spark Plugin",
            "description": "Vanilla plugin is a reference plugin implementation which allows to operate with cluster with Apache Hadoop.",
            "maintainers": [
                {
                    "name": "Andrew Lazarev",
                    "email": "alazarev@mirantis.com",
                    "launchpad_id": "alazarev"
                }
            ],
            "wiki": "https://wiki.openstack.org/wiki/Sahara/SparkPlugin",
            "releases": ["Juno"]
          },
          {
            "project_id": "openstack/sahara",
            "vendor": "OpenStack Community",
            "name": "Vanilla Plugin",
            "description": "Vanilla plugin is a reference plugin implementation which allows to operate with cluster with Apache Hadoop.",
            "maintainers": [
                {
                    "name": "Sergey Lukjanov",
                    "email": "slukjanov@mirantis.com",
                    "launchpad_id": "slukjanov"
                }
            ],
            "wiki": "http://docs.openstack.org/developer/sahara/userdoc/vanilla_plugin.html",
            "releases": ["Icehouse", "Juno"],
            "ci": {
                "id": "savanna-ci",
                "success_pattern": "gate-sahara-integration-vanilla-.* \\S+ : SUCCESS",
                "failure_pattern": "gate-sahara-integration-vanilla-.* \\S+ : FAILURE"
               }
          },
          {
            "project_id": "openstack/sahara",
            "vendor": "OpenStack Community",
            "name": "Spark Plugin",
            "description": "Spark plugin provides an ability to launch Spark on Hadoop CDH cluster without any management consoles.",
            "maintainers": [
                {
                    "name": "Daniele Venzano",
                    "email": "venza@brownhat.org",
                    "launchpad_id": "venza"
                }
            ],
            "wiki": "http://docs.openstack.org/developer/sahara/userdoc/spark_plugin.html",
            "releases": ["Juno"],
            "ci": {
                "id": "savanna-ci",
                "success_pattern": "gate-sahara-integration-spark-.* \\S+ : SUCCESS",
                "failure_pattern": "gate-sahara-integration-spark-.* \\S+ : FAILURE"
               }
          },
          {
            "project_id": "openstack/sahara",
            "vendor": "OpenStack Community",
            "name": "Cloudera Plugin (Beta)",
            "description": "Cloudera plugin provides an ability to launch CDH clusters with Cloudera Manager management console.",
            "maintainers": [
                {
                    "name": "Sergey Reshetnyak",
                    "email": "sreshetniak@mirantis.com",
                    "launchpad_id": "sreshetniak"
                }
            ],
            "wiki": "https://wiki.openstack.org/wiki/Sahara/CDHPlugin",
            "releases": ["Juno"],
            "ci": {
                "id": "savanna-ci",
                "success_pattern": "gate-sahara-integration-cdh-.* \\S+ : SUCCESS",
                "failure_pattern": "gate-sahara-integration-cdh-.* \\S+ : FAILURE"
               }
          }
    ]
}

